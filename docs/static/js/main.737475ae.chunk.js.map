{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFechGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","value","type","onChange","target","defaultProps","getGif","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","console","log","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFechGifs","GifExpertApp","categories","i","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAsB5C,OACI,sBAAMC,SAbU,SAACC,GAEjBA,EAAEC,iBACAJ,EAAWK,OAAOC,OAAO,IAG1BR,GAAc,SAACS,GAAD,OAAYP,GAAZ,mBAA2BO,OACzCN,EAAc,MAMf,SACI,uBACIO,KAAK,OACLD,MAAOP,EACPS,SAvBc,SAACN,GAGvBF,EAAcE,EAAEO,OAAOH,aAkC/BV,EAAYc,aAAe,G,mCCzCVC,EAAM,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEZC,EAFY,iDAEoCC,UAAUH,GAF9C,+DAGCI,MAAMF,GAHP,cAGZG,EAHY,gBAIGA,EAAKC,OAJR,uBAIXC,EAJW,EAIXA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAEzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAK1Ca,QAAQC,IAAIR,GAhBM,kBAiBTA,GAjBS,4CAAH,sDCDVS,EAAc,SAAC,GAAoB,EAAnBN,GAAoB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAInC,OACI,sBAAKgB,UAAU,yCAAf,UACI,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAIA,QCHHS,EAAU,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAAc,ECHZ,SAACA,GAAc,IAAD,EAEXd,mBAAS,CAE/BqB,KAAM,GACNe,SAAS,IALwB,mBAE9BC,EAF8B,KAEvBC,EAFuB,KA0BrC,OAjBAC,qBAAU,WAEN1B,EAAOC,GACF0B,MAAM,SAAAC,GAEHH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAOtB,CAACtB,IAGGuB,EDpBwBK,CAAY5B,GAA/Ba,EAHuB,EAG5BN,KAAae,EAHe,EAGfA,QAqBpB,OAnBAP,QAAQC,IAAIM,GAqBR,qCACI,qBAAIJ,UAAU,yCAAd,cAA0DlB,EAA1D,OACEsB,GAAW,mBAAIJ,UAAU,wCAAd,0BACb,qBAAKA,UAAU,YAAf,SAIQL,EAAOJ,KAAI,SAACC,GAER,OACI,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEH1BkB,EAnCM,WAAM,MAGgB3C,mBAAS,CAAC,cAH1B,mBAGf4C,EAHe,KAGH7C,EAHG,KAcvB,OACI,qCACI,+CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQ6C,EAAWrB,KAAI,SAACT,EAAS+B,GAAV,OAEX,cAAC,EAAD,CAEI/B,SAAUA,GADHA,Y,MCzBnCgC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.737475ae.chunk.js","sourcesContent":["//rafc\nimport React, {useState} from 'react'\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({setCategories}) => {\n\n    const [inputValue, setInputValue] = useState('')\n\n    const handleInputChange = (e) =>{\n\n       // console.log(e);\n        setInputValue(e.target.value);\n    }\n\n    const hadleSubmit = (e) =>{\n\n        e.preventDefault();\n      if( inputValue.trim().length>2){\n\n      \n         setCategories((value) => [inputValue, ...value]);\n         setInputValue('');\n       }\n  \n    }\n\n    return (\n        <form onSubmit={hadleSubmit}>\n            <input \n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange}\n            >\n                \n            </input>\n        </form>\n    )\n}\n\n\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n\nAddCategory.defaultProps = {\n}\n   \n","\n\n\n\n    export const getGif = async( category ) => {\n\n        const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=0lcq6KI1WCEm3ytUaMaVrOCtFxVKqCrS`\n        const resp = await fetch(url);\n        const {data} = await resp.json();\n\n        const gifs = data.map(img => {\n\n            return { \n                id: img.id,\n                title: img.title,\n                url: img.images?.downsized_medium.url\n\n            }\n        })\n\n        console.log(gifs);\n         return  gifs;\n    }","//rafc\nimport React from 'react'\n\nexport const GifGridItem = ({id, title,url}) => {\n\n  \n    \n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title}/>\n            <p>{title}</p>\n        </div>\n    )\n}\n","//rafc\n//import userEvent from '@testing-library/user-event';\nimport React from 'react'\nimport { useFechGifs } from '../hooks/useFechGifs'\n//import { getGif } from '../helpers/getGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({category}) => {\n\n\n    const {data:images, loading} = useFechGifs(category);\n\n    console.log(loading);\n\n    /*\n    const [images, setImages] = useState([]);\n    //api key 0lcq6KI1WCEm3ytUaMaVrOCtFxVKqCrS\n\n    \n\n\n    useEffect(() =>{\n\n        getGif(category).then(setImages);\n    }, [category])*/\n\n\n\n\n    //getGif();\n\n    return (\n\n        <> \n            <h3 className=\"card animate__animated animate__fadeIn\"> { category } </h3>\n            { loading && <p  className=\"card animate__animated animate__flash\" >Cargando... </p> }\n            <div className=\"card-grid\">\n            \n                {\n                    \n                    images.map((img) => { \n                        \n                        return(\n                            <GifGridItem \n                                key={img.id}\n                                {...img}\n                            />\n                        )\n\n                    })   \n                }\n     \n            \n        </div>\n        </>\n    )\n}\n","import {useEffect, useState} from 'react'\nimport { getGif } from '../helpers/getGifs';\n\n\nexport const useFechGifs = (category) => {\n\n    const [state, setstate] = useState({\n\n        data: [],\n        loading: true\n\n    });\n\n    useEffect(()=>{\n\n        getGif(category)\n            .then( imgs=>{\n\n                setstate({\n                    data: imgs,\n                    loading: false\n                })\n\n\n\n            })\n    \n    }, [category])\n\n\n    return state; //{ data:[], loading: true };\n\n\n}\n","//rafc o  rnfe  snippet class\nimport React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory'\nimport { GifGrid } from './components/GifGrid'\n\n\nconst GifExpertApp = () => {\n\n    //const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\n    const [ categories, setCategories ]  = useState(['One Punch'])\n/*\n   const handleAdd = () =>{\n\n        console.log('click');\n\n        setCategories([...categories, 'HunterXHunter'])\n        // 'HunterXHunter\n    }*/\n\n    \n    return (\n        <>\n            <h2>GifExpertApp </h2>\n            <AddCategory setCategories= {setCategories} />\n            <hr />\n           \n            <ol>\n                {\n                    categories.map((category,i) =>(\n                        \n                        <GifGrid \n                            key = {category}\n                            category={category} \n                        />\n                    ))\n                }\n            </ol>\n        </>\n    )\n}\n\nexport default GifExpertApp\n\n\n\n\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}